{"version":3,"sources":["js/uiProgressButton.js"],"names":["window","transEndEventNames","transEndEventName","Modernizr","prefixed","support","transitions","csstransitions","extend","a","b","key","hasOwnProperty","SVGEl","el","paths","slice","call","querySelectorAll","pathsArr","Array","lengthsArr","_init","prototype","self","forEach","path","i","style","strokeDasharray","getTotalLength","draw","val","len","length","strokeDashoffset","UIProgressButton","options","statusTime","button","querySelector","progressEl","successEl","errorEl","_initEvents","_disable","addEventListener","_submit","onEndBtnTransitionFn","ev","propertyName","removeEventListener","setAttribute","callback","setProgress","stop","status","endLoading","statusClass","statusEl","classie","addClass","setTimeout","remove","_enable","removeClass","removeAttribute"],"mappings":"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","file":"4e21b07b96f296b131ae21464f2482e7.map","sourcesContent":["/**\n * uiProgressButton.js v1.0.0\n * http://www.codrops.com\n *\n * Licensed under the MIT license.\n * http://www.opensource.org/licenses/mit-license.php\n *\n * Copyright 2014, Codrops\n * http://www.codrops.com\n */\n;( function( window ) {\n\n\t'use strict';\n\n\tvar transEndEventNames = {\n\t\t\t'WebkitTransition': 'webkitTransitionEnd',\n\t\t\t'MozTransition': 'transitionend',\n\t\t\t'OTransition': 'oTransitionEnd',\n\t\t\t'msTransition': 'MSTransitionEnd',\n\t\t\t'transition': 'transitionend'\n\t\t},\n\t\ttransEndEventName = transEndEventNames[ Modernizr.prefixed( 'transition' ) ],\n\t\tsupport = { transitions : Modernizr.csstransitions };\n\n\tfunction extend( a, b ) {\n\t\tfor( var key in b ) {\n\t\t\tif( b.hasOwnProperty( key ) ) {\n\t\t\t\ta[key] = b[key];\n\t\t\t}\n\t\t}\n\t\treturn a;\n\t}\n\n\tfunction SVGEl( el ) {\n\t\tthis.el = el;\n\t\t// the path elements\n\t\tthis.paths = [].slice.call( this.el.querySelectorAll( 'path' ) );\n\t\t// we will save both paths and its lengths in arrays\n\t\tthis.pathsArr = new Array();\n\t\tthis.lengthsArr = new Array();\n\t\tthis._init();\n\t}\n\n\tSVGEl.prototype._init = function() {\n\t\tvar self = this;\n\t\tthis.paths.forEach( function( path, i ) {\n\t\t\tself.pathsArr[i] = path;\n\t\t\tpath.style.strokeDasharray = self.lengthsArr[i] = path.getTotalLength();\n\t\t} );\n\t\t// undraw stroke\n\t\tthis.draw(0);\n\t}\n\n\t// val in [0,1] : 0 - no stroke is visible, 1 - stroke is visible\n\tSVGEl.prototype.draw = function( val ) {\n\t\tfor( var i = 0, len = this.pathsArr.length; i < len; ++i ){\n\t\t\tthis.pathsArr[ i ].style.strokeDashoffset = this.lengthsArr[ i ] * ( 1 - val );\n\t\t}\n\t}\n\n\tfunction UIProgressButton( el, options ) {\n\t\tthis.el = el;\n\t\tthis.options = extend( {}, this.options );\n\t\textend( this.options, options );\n\t\tthis._init();\n\t}\n\n\tUIProgressButton.prototype.options = {\n\t\t// time in ms that the status (success or error will be displayed) - should be at least higher than the transition-duration value defined for the stroke-dashoffset transition of both checkmark and cross strokes\n\t\tstatusTime : 1500\n\t}\n\n\tUIProgressButton.prototype._init = function() {\n\t\t// the button\n\t\tthis.button = this.el.querySelector( 'button' );\n\t\t// progress el\n\t\tthis.progressEl = new SVGEl( this.el.querySelector( 'svg.progress-circle' ) );\n\t\t// the success/error elems\n\t\tthis.successEl = new SVGEl( this.el.querySelector( 'svg.checkmark' ) );\n\t\tthis.errorEl = new SVGEl( this.el.querySelector( 'svg.cross' ) );\n\t\t// init events\n\t\tthis._initEvents();\n\t\t// enable button\n\t\t// this._enable();\n\t\tthis._disable();\n\t}\n\n\tUIProgressButton.prototype._initEvents = function() {\n\t\tvar self = this;\n\t\tthis.button.addEventListener( 'click', function() { self._submit(); } );\n\t}\n\n\tUIProgressButton.prototype._submit = function() {\n\t\t// by adding the loading class the button will transition to a \"circle\"\n\t\t// classie.addClass( this.el, 'loading' );\n\n\t\tvar self = this,\n\t\t\tonEndBtnTransitionFn = function( ev ) {\n\t\t\t\tif( support.transitions ) {\n\t\t\t\t\tif( ev.propertyName !== 'width' ) return false;\n\t\t\t\t\tthis.removeEventListener( transEndEventName, onEndBtnTransitionFn );\n\t\t\t\t}\n\n\t\t\t\t// disable the button - this should have been the first thing to do when clicking the button.\n\t\t\t\t// however if we do so Firefox does not seem to fire the transitionend event.\n\t\t\t\tthis.setAttribute( 'disabled', '' );\n\n\t\t\t\tif( typeof self.options.callback === 'function' ) {\n\t\t\t\t\tself.options.callback( self );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// fill it (time will be the one defined in the CSS transition-duration property)\n\t\t\t\t\tself.setProgress(1);\n\t\t\t\t\tself.stop();\n\t\t\t\t}\n\t\t\t};\n\n\t\tif( support.transitions ) {\n\t\t\tthis.button.addEventListener( transEndEventName, onEndBtnTransitionFn );\n\t\t}\n\t\telse {\n\t\t\tonEndBtnTransitionFn();\n\t\t}\n\t}\n\n\t// runs after the progress reaches 100%\n\tUIProgressButton.prototype.stop = function( status ) {\n\t\tvar self = this,\n\t\t\tendLoading = function() {\n\t\t\t\t// first undraw progress stroke.\n\t\t\t\t// self.progressEl.draw(0);\n\n\t\t\t\tif( typeof status === 'number' ) {\n\t\t\t\t\tvar statusClass = status >= 0 ? 'success' : 'error',\n\t\t\t\t\t\tstatusEl = status >=0 ? self.successEl : self.errorEl;\n\n\t\t\t\t\t// draw stroke of success (checkmark) or error (cross).\n\t\t\t\t\tstatusEl.draw( 1 );\n\t\t\t\t\t// add respective class to the element\n\t\t\t\t\tclassie.addClass( self.el, statusClass );\n\t\t\t\t\t// after options.statusTime remove status and undraw the respective stroke. Also enable the button.\n\t\t\t\t\tsetTimeout( function() {\n\t\t\t\t\t\tclassie.remove( self.el, statusClass );\n\t\t\t\t\t\tstatusEl.draw(0);\n\t\t\t\t\t\tself._enable();\n\t\t\t\t\t}, self.options.statusTime );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tself._enable();\n\t\t\t\t}\n\t\t\t\t// finally remove class loading.\n\t\t\t\tclassie.removeClass( self.el, 'loading' );\n\t\t\t};\n\n\t\t// give it a time (ideally the same like the transition time) so that the last progress increment animation is still visible.\n\t\tsetTimeout( endLoading, 0);  // 300 );\n\t}\n\n\tUIProgressButton.prototype.setProgress = function( val ) {\n\t\tthis.progressEl.draw( val );\n\t}\n\n\t// enable button\n\tUIProgressButton.prototype._enable = function() {\n\t\tthis.button.removeAttribute( 'disabled' );\n\t}\n\n\tUIProgressButton.prototype._disable = function() {\n\t\tthis.button.setAttribute( 'disabled', true );\n\t}\n\n\t// add to global namespace\n\twindow.UIProgressButton = UIProgressButton;\n\n})( window );\n"]}